buildscript {
    repositories {
        // mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.graceframework:grace-gradle-plugin:$graceVersion"
    }
}

group = "org.graceframework.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: "org.graceframework.grace-plugin"
apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    isReleaseVersion = !version.endsWith('SNAPSHOT')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    // mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    compileOnly "org.graceframework:grace-boot"
    implementation "org.graceframework:grace-web-common"
    implementation "org.graceframework:grace-web-taglib"
    // implementation "org.graceframework:grace-web-url-mappings"
    implementation project(':asset-pipeline-core'), {
        exclude group:'org.mozilla', module:'rhino'
        exclude group:'com.google.javascript', module:'closure-compiler-unshaded'
    }
    implementation project(':asset-pipeline-plugin')
    profile 'org.graceframework.profiles:web-plugin'
    testImplementation("org.graceframework:grace-test-support")
}

configure([compileGroovy, compileTestGroovy]) {
    groovyOptions.encoding = "UTF-8"
    options.encoding = "UTF-8"
    options.compilerArgs << '-parameters'
    options.forkOptions.memoryInitialSize = '128M'
    options.forkOptions.memoryMaximumSize = '1G'
}

jar {
    enabled = true
    archiveClassifier.set('')
    includeEmptyDirs = false
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'asset-pipeline-i18n'
            artifact source: "${project.sourceSets.main.groovy.classesDirectory.get()}/META-INF/grails-plugin.xml",
                classifier: "plugin",
                extension: 'xml'

            pom.withXml {
                def pomNode = asNode()

                try {
                    pomNode.dependencyManagement.replaceNode {}
                } catch (Throwable ignore) {
                }

                pomNode.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Grace Asset Pipeline I18n Plugin'
                    description 'The Grace Asset-Pipeling plugin to use localized messages in JavaScript.'
                    url 'https://github.com/grace-plugins/grace-asset-pipeline'
                    scm {
                        url 'https://github.com/grace-plugins/grace-asset-pipeline'
                        connection 'scm:https://github.com/grace-plugins/grace-asset-pipeline.git'
                        developerConnection 'scm:git@github.com/grace-plugins/grace-asset-pipeline.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
						developer {
							id 'rainboyan'
							name 'Michael Yan'
							email 'rain@rainboyan.com'
						}
                    }
                }
            }
            from components.java
        }
    }
}
